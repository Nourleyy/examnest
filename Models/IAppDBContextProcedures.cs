// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using ExamNest.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace ExamNest.Models
{
    public partial interface IAppDBContextProcedures
    {
        Task<List<CorrectExamResult>> CorrectExamAsync(int? submissionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CreateBranchResult>> CreateBranchAsync(string branchName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CreateChoiceResult>> CreateChoiceAsync(int? questionID, string choiceLetter, string choiceText, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CreateCourseResult>> CreateCourseAsync(int? trackID, string courseName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CreateExamAndGetIdResult>> CreateExamAndGetIdAsync(int? courseID, int? numberOfQuestions, DateTime? examDate, DateTime? endDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CreateInstructorResult>> CreateInstructorAsync(int? branchID, int? trackID, string? userID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CreateQuestionResult>> CreateQuestionAsync(int? courseID, string questionText, string questionType, string modelAnswer, int? points, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CreateStudentResult>> CreateStudentAsync(int? branchID, int? trackID, string userID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CreateTrackResult>> CreateTrackAsync(int? branchID, string trackName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteBranchResult>> DeleteBranchAsync(int? branchID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteChoiceResult>> DeleteChoiceAsync(int? choiceID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteCourseResult>> DeleteCourseAsync(int? courseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteInstructorResult>> DeleteInstructorAsync(int? instructorID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteQuestionResult>> DeleteQuestionAsync(int? questionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteTrackResult>> DeleteTrackAsync(int? trackID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllBranchesResult>> GetAllBranchesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllCoursesResult>> GetAllCoursesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllQuestionsResult>> GetAllQuestionsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllStudentsResult>> GetAllStudentsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllTracksResult>> GetAllTracksAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBranchByIDResult>> GetBranchByIDAsync(int? branchID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetChoiceByIDResult>> GetChoiceByIDAsync(int? choiceID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetChoicesByQuestionResult>> GetChoicesByQuestionAsync(int? questionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCourseByIDResult>> GetCourseByIDAsync(int? courseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCoursesByTrackResult>> GetCoursesByTrackAsync(int? trackID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExamChoiceListResult>> GetExamChoiceListAsync(int? examID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExamDetailsResult>> GetExamDetailsAsync(int? examID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExamQuestionListResult>> GetExamQuestionListAsync(int? examID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetInstructorByIDResult>> GetInstructorByIDAsync(int? instructorID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetInstructorsByBranchResult>> GetInstructorsByBranchAsync(int? branchID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetInstructorsByTrackResult>> GetInstructorsByTrackAsync(int? trackID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetQuestionByIDResult>> GetQuestionByIDAsync(int? questionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetQuestionsByCourseResult>> GetQuestionsByCourseAsync(int? courseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentByIDResult>> GetStudentByIDAsync(int? studentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentExamAnswerDetailsResult>> GetStudentExamAnswerDetailsAsync(int? submissionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentExamChoiceDetailsResult>> GetStudentExamChoiceDetailsAsync(int? submissionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentExamResultsResult>> GetStudentExamResultsAsync(int? studentID, int? examID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentsByBranchResult>> GetStudentsByBranchAsync(int? branchID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentsByTrackResult>> GetStudentsByTrackAsync(int? trackID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTrackByIDResult>> GetTrackByIDAsync(int? trackID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTracksByBranchResult>> GetTracksByBranchAsync(int? branchID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SubmitExamAnswersResult>> SubmitExamAnswersAsync(int? examID, int? studentID, string answersJson, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateBranchResult>> UpdateBranchAsync(int? branchID, string branchName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateChoiceResult>> UpdateChoiceAsync(int? choiceID, string choiceLetter, string choiceText, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateCourseResult>> UpdateCourseAsync(int? courseID, int? trackID, string courseName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateInstructorResult>> UpdateInstructorAsync(int? instructorID, int? branchID, int? trackID, string? userID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateQuestionResult>> UpdateQuestionAsync(int? questionID, int? courseID, string questionText, string questionType, string modelAnswer, int? points, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateStudentResult>> UpdateStudentAsync(int? studentID, int? branchID, int? trackID, string? userID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateTrackResult>> UpdateTrackAsync(int? trackID, int? branchID, string trackName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
